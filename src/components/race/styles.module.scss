.book {
  display: flex;
  flex-direction: row;
  align-items: center;

  > svg {
    top: 1px;
    display: inline-block;
    height: 1.3em;
    width: auto;
  }
  > span {
    display: inline-block;
    margin-left: .5em;
    font-style: italic;
    color: var(--color-text-secondary);
    cursor: pointer;

    &::after {
      content: "";
      position: absolute;
      left: 0;
      right: 0;
      bottom: -1px;
      height: 1px;
      border-bottom: 1px dashed rgba(255,255,255,.24);
    }

    &:hover::after {
      border-color: rgba(255,255,255,.5);
    }
  }
}

.race {
  padding: 2rem 0;
  display: flex;
  flex-direction: column;
}

.text {
  margin-top: 1em;
  font-size: 1.3em;
  line-height: 1.6em;
  letter-spacing: 1px;
}

.word {
  white-space: nowrap;

  .race[data-state~="race"] & {
    &[data-wordstate="current"] {
      &::before {
        content: "";
        display: block;
        position: absolute;
        left: -.1em;
        bottom: -.1em;
        right: .2em;
        top: -.1em;
        background: rgba(255,255,255,.05);
        border-radius: .2em;

        animation: highlight-word .3s ease-out;
        animation-fill-mode: backwards;
        @keyframes highlight-word {
          from { transform: translateX(-5px); }
        }
      }
    }
  }
}

.letter {
  display: inline-block;
  white-space: pre;

  transition:
    opacity .03s ease-out,
    transform .03s ease-out;

  --cursor-bg: transparent;

  .race[data-state~="race"] & {
    &[data-letterstate="prev"] {
      opacity: .5;
      transform: scale(.85);
    }
    &[data-letterstate="current"] {
      &::before {
        content: "";
        display: block;
        position: absolute;
        left: -2px;
        bottom: 2px;
        width: 2px;
        height: 1.4em;
        background: var(--cursor-bg);

        animation: cursor-move .11s ease-out;
        animation-fill-mode: backwards;
        transform-origin: center bottom;
        @keyframes cursor-move {
          from { transform: translateX(-5px); }
        }
      }
    }
  }

  .race[data-state~="race.valid"] & {
    &[data-letterstate="current"] {
      --cursor-bg: #ffbc11;
    }
  }
  .race[data-state~="race.invalid"] & {
    &[data-letterstate="current"] {
      --cursor-bg: var(--color-red);

      animation: highlight-error-letter .2s ease-out;
      animation-fill-mode: backwards;
      @keyframes highlight-error-letter {
        from {
          color: var(--color-red);
          transform: scale(1.4);
        }
      }
    }
  }
}

.input {
  --text-color: var(--color-text-gray);
  --border-color: var(--color-text-gray);

  font-size: 1.6em;
  padding: .5em;
  margin-top: 2.1rem;
  width: 100%;
  height: 2.5em;
  color: var(--text-color);
  white-space: pre;

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: block;
    border: 2px solid var(--border-color);
    border-radius: .2em;
  }

  .race[data-focused="true"] & {
    --text-color: var(--color-text-primary);
    --border-color: var(--color-text-primary);
  }
}
.inputWrapper {
  display: inline-block;

  .race[data-state~="race.selected"] & {
    &::before {
      content: "";
      position: absolute;
      left: -.1em;
      right: -.1em;
      bottom: -.1em;
      top: -.1em;
      display: block;
      background: rgba(255,255,255,.32);
    }
  }
}
.inputCurrentWord {
  position: relative;
}
.inputWrongText {
  display: inline-block;

  .race[data-state~="race.invalid"] & {
    &::before {
      content: "";
      position: absolute;
      left: -1px;
      right: -1px;
      bottom: -1px;
      top: -1px;
      display: block;
      background: var(--color-red);
      border-radius: .2em;
      z-index: -1;
    }
  }
}
.inputCursor {
  --cursor-color: var(--color-text-gray);

  display: inline-block;

  &::before {
    content: "";
    position: absolute;
    left: 2px;
    bottom: -.3em;
    display: block;
    width: 2px;
    height: 1.3em;
    background: var(--cursor-color);

  }

  .race[data-focused="true"] & {
    --cursor-color: var(--color-text-primary);

    animation: pulse-cursor 1s infinite;
    animation-fill-mode: backwards;
    animation-delay: .5s;
    @keyframes pulse-cursor {
      to { opacity: .3; }
    }
  }
  .race[data-state~='race.selected'] & {
    &::before {
      display: none;
    }
  }
}
